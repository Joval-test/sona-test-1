name: BizCon CI/CD Pipeline with Newman

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  release:
    types: [published]

jobs:
  build:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js for frontend
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install frontend dependencies
        working-directory: pkg/frontend
        run: npm install

      - name: Build frontend
        working-directory: pkg/frontend
        run: npm run build

      - name: Setup Python 3.12 for backend
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Create Virtual Environment and Install Dependencies
        working-directory: pkg/backend
        run: |
          python -m venv .venv
          .\.venv\Scripts\python.exe -m pip install --upgrade pip
          .\.venv\Scripts\python.exe -m pip install -r requirements.txt

      - name: Install PyInstaller Globally
        run: pip install pyinstaller

      - name: Patch Spec File to Handle Missing Metadata
        working-directory: pkg/backend
        run: |
          $content = Get-Content app.spec
          $content = $content -replace "all_datas \+= copy_metadata\('torch'\)", @"
try:
    all_datas += copy_metadata('torch')
except Exception as e:
    print(f"Skipping metadata for torch: {e}")
"@
          $content = $content -replace "all_datas \+= copy_metadata\('torchvision'\)", @"
try:
    all_datas += copy_metadata('torchvision')
except Exception as e:
    print(f"Skipping metadata for torchvision: {e}")
"@
          $content = $content -replace "all_datas \+= copy_metadata\('easyocr'\)", @"
try:
    all_datas += copy_metadata('easyocr')
except Exception as e:
    print(f"Skipping metadata for easyocr: {e}")
"@
          $content = $content -replace "all_datas \+= copy_metadata\('transformers'\)", @"
try:
    all_datas += copy_metadata('transformers')
except Exception as e:
    print(f"Skipping metadata for transformers: {e}")
"@
          $content = $content -replace "all_datas \+= copy_metadata\('huggingface-hub'\)", @"
try:
    all_datas += copy_metadata('huggingface-hub')
except Exception as e:
    print(f"Skipping metadata for huggingface-hub: {e}")
"@
          $content = $content -replace "all_datas \+= copy_metadata\('safetensors'\)", @"
try:
    all_datas += copy_metadata('safetensors')
except Exception as e:
    print(f"Skipping metadata for safetensors: {e}")
"@
          Set-Content -Path app.spec -Value $content

      - name: Package the backend as .exe
        working-directory: pkg/backend
        run: pyinstaller --clean --log-level DEBUG app.spec

      - name: Upload built executable
        uses: actions/upload-artifact@v4
        with:
          name: CazeBizConAI
          path: pkg/backend/dist/Caze BizConAI/Caze BizConAI.exe
